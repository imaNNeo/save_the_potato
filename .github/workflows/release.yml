name: Deploy artifacts

on:
  release:
    types: [ published ]

jobs:
  release_ios:
    name: Build and Deploy iOS
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Bundle install
        run: cd ./ios && bundle install
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Setup Firebase
        run: |
          curl -sL https://firebase.tools | bash
          dart pub global activate flutterfire_cli
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON_FILE_BASE64 }}" | base64 -d > gcloud-service-key.json
          GOOGLE_APPLICATION_CREDENTIALS=gcloud-service-key.json \
          flutterfire configure \
          --project save-the-potato  \
          --android-package-name=dev.app2pack.savethepotato \
          --ios-bundle-id=dev.app2pack.savethepotato \
          --macos-bundle-id=dev.app2pack.savethepotato \
          --web-app-id=dev.app2pack.savethepotato \
          --windows-app-id=dev.app2pack.savethepotato \
          --platforms=android,ios
      - name: Setup wiredash
        run: |
          sed -i '' "s/###WIREDASH_SECRET/\${{ secrets.WIREDASH_SECRET }}/" lib/main.dart
        shell: bash
      - name: Setup Flutter
        run: |
          flutter pub get
          cd ./ios && pod install
      - name: Setup SSH Keys and known_hosts for fastlane match
        run: |
          SSH_PATH="$HOME/.ssh"
          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"
          echo "$PRIVATE_KEY" > "$SSH_PATH/id_rsa"
          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/id_rsa"
          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_rsa"
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Build and Deploy to TestFlight
        run: |
          cd ./ios
          bundle exec fastlane ios release
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS: ${{ secrets.DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_KEY_ISSUER_ID: ${{ secrets.APPSTORE_KEY_ISSUER_ID }}
          APPSTORE_KEY_CONTENT: ${{ secrets.APPSTORE_KEY_CONTENT }}
      - name: Rename the iPA file
        run: |
          mkdir artifacts
          cp ios/Runner.ipa artifacts/SaveThePotato-iOS-${{ github.ref_name }}.ipa
      - name: Upload iOS artifacts to the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  release_android:
    name: Build and Deploy Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Setup Firebase
        run: |
          curl -sL https://firebase.tools | bash
          dart pub global activate flutterfire_cli
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON_FILE_BASE64 }}" | base64 -d > gcloud-service-key.json
          GOOGLE_APPLICATION_CREDENTIALS=gcloud-service-key.json \
          flutterfire configure \
          --project save-the-potato  \
          --android-package-name=dev.app2pack.savethepotato \
          --ios-bundle-id=dev.app2pack.savethepotato \
          --macos-bundle-id=dev.app2pack.savethepotato \
          --web-app-id=dev.app2pack.savethepotato \
          --windows-app-id=dev.app2pack.savethepotato \
          --platforms=android,ios
      - name: Setup wiredash
        run: |
          sed -i "s/###WIREDASH_SECRET/\${{ secrets.WIREDASH_SECRET }}/" lib/main.dart
        shell: bash
      - name: Create the Keystore file
        run: |
          echo $ANDROID_KEYSTORE_BASE64 | base64 -d > keystore.jks
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      - name: Create the keystore.properties file
        run: echo $ANDROID_KEYSTORE_PROPERTIES_BASE64 | base64 -d > android/key.properties
        env:
          ANDROID_KEYSTORE_PROPERTIES_BASE64: ${{ secrets.ANDROID_KEYSTORE_PROPERTIES_BASE64 }}
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Build Android App Bundle
        run: flutter build appbundle --release
      - name: Create google_play_credentials.json
        run: |
          echo '${{ secrets.ANDROID_GOOGLE_SERVICE_ACCOUNT_JSON }}' > google_play_credentials.json
          wc -c google_play_credentials.json
        env:
          ANDROID_GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.ANDROID_GOOGLE_SERVICE_ACCOUNT_JSON }}

      - name: Deploy to Alpha
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: google_play_credentials.json
          packageName: dev.app2pack.savethepotato
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          mappingFile: build/app/outputs/mapping/release/mapping.txt
          debugSymbols: build/app/intermediates/merged_native_libs/release/out/lib
          track: internal
          status: draft
#          whatsNewDirectory: distribution/
      - name: Build Android universal APK (just for keeping them as artifacts)
        run: flutter build apk --release

      - name: Rename the apk and aab files
        run: |
          mkdir artifacts
          cp build/app/outputs/flutter-apk/app-release.apk artifacts/SaveThePotato-Android-Universal-${{ github.ref_name }}.apk
          cp build/app/outputs/bundle/release/app-release.aab artifacts/SaveThePotato-Android-AppBundle-${{ github.ref_name }}.aab

      - name: Upload Android artifacts to the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
