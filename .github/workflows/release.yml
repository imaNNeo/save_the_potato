name: Deploy artifacts

on:
  release:
    types: [ published ]

jobs:
  release_ios:
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Bundle install
        run: cd ./ios && bundle install
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Setup Flutter
        run: |
          flutter pub get
          cd ./ios && pod install
      - name: Setup SSH Keys and known_hosts for fastlane match
        run: |
          SSH_PATH="$HOME/.ssh"
          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"
          echo "$PRIVATE_KEY" > "$SSH_PATH/id_rsa"
          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/id_rsa"    
          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_rsa"
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Build and Deploy to TestFlight
        run: |
          cd ./ios
          bundle exec fastlane ios release
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS: ${{ secrets.DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_KEY_ISSUER_ID: ${{ secrets.APPSTORE_KEY_ISSUER_ID }}
          APPSTORE_KEY_CONTENT: ${{ secrets.APPSTORE_KEY_CONTENT }}
      - name: Rename the iPA file
        run: cp ios/Runner.ipa ios/SaveThePotato-${{ github.ref_name }}.ipa
      - name: Upload the iPA file
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{ github.ref_name }}
          path: ios/SaveThePotato-${{ github.ref_name }}.ipa

  upload_artifacts:
    name: Upload the artifacts
    runs-on: ubuntu-latest
    needs: [ release_ios ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-${{ github.ref_name }}
          path: artifacts/

      - name: Upload artifacts to the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
